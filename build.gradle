plugins {
    id 'java'

    id 'idea'
    id 'java-library'
}

group 'org.alextheracer1'
version '1.0-SNAPSHOT'

/*
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

plugins.withType(JavaPlugin).configureEach {
    java {
        modularity.inferModulePath = true
    }
}

// Copy the Java modules, run script and JAR in the distribution directory
tasks.register("copyDistribution", Copy) {
    from configurations.default
    from tasks.named('jar')
    from layout.projectDirectory.file('assets/run.sh')
    into layout.buildDirectory.dir('distribution')
}
tasks.named("build") {
    dependsOn("copyDistribution")
}
*/


jar {
    manifest {
        attributes(
                'Main-Class': 'org.alextheracer1.Main',
        )
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    classifier = 'all'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

artifacts {
    archives fatJar
}


repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // Logging Framework
    implementation 'ch.qos.logback:logback-classic:1.2.9'

    // Pi4J Library
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'org.slf4j:slf4j-simple:1.7.32'
    implementation 'com.pi4j:pi4j-core:2.1.1'
    implementation 'com.pi4j:pi4j-plugin-raspberrypi:2.1.1'
    implementation 'com.pi4j:pi4j-plugin-pigpio:2.1.1'
}

test {
    useJUnitPlatform()
}